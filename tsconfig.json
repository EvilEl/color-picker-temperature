{
  "compilerOptions": {
    "strict": true,

    //Module
    "module": "commonjs",

    // Type Checking
    // проверяет на код, который не будет выполнен, но указан.
    "allowUnreachableCode": false,
    //сигнализирует если был пропущен в switch: break or return
    "noFallthroughCasesInSwitch": true,
    //выдавать ошибку всякий раз, когда any объявлен дефолтно
    "noImplicitAny": true,
    // можем гарантировать, что подклассы никогда не будут рассинхронизированы, гарантируя,
    // что переопределяющие функции включают переопределение ключевого слова.
    // если переопределяем в классе нужно испольозовать "override"
    "noImplicitOverride": false,
    //Сообщать об ошибках неиспользуемых локальных переменных.
    "noUnusedLocals": true,
    //Сообщать об ошибках неиспользуемых параметров в функциях.
    "noUnusedParameters": true,

    //Emit
    // Создайте файлы .d.ts для каждого файла TypeScript
    // Эти файлы .d.ts представляют собой файлы определения типов, которые описывают внешний API вашего модуля.
    "declaration": true,
    // указываем директорию куда класть файлы .d.ts
    "declarationDir": "./dist/types",
    //Создает исходную карту для файлов .d.ts, которые сопоставляются
    // с исходным исходным файлом .ts. Это позволит таким редакторам,
    // как VS Code, переходить к исходному файлу .ts при использовании
    // таких функций, как «Перейти к определению».
    "declarationMap": true,
    //выходные файлы
    "outDir": "./dist",
    // Удаляет все комментарии из файлов TypeScript при преобразовании в JavaScript.
    "removeComments": true,
    // Включает создание файлов исходной карты. Эти файлы позволяют отладчикам и
    // другим инструментам отображать исходный код TypeScript при фактической
    // работе с созданными файлами JavaScript - для дебагинга при билде
    // "sourceMap": true

    //Lib
    "target": "ES2016",
    "lib": ["ES2016", "DOM"],

    //Output Formatting
    //усекайте сообщения об ошибках.
    "noErrorTruncation": true
  },

  //Type Acquisition
  // Отключает автоматическое получение типа в проектах JavaScript:
  "typeAcquisition": {
    "enable": false
  },
  // Для поиска файлов ts.
  "include": ["**/*", "*", "dist/my-lib.js"]
}
